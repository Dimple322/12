#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã —á–µ—Ä–µ–∑ –∑–∞–º–µ–Ω—É/–Ω–∞—Å—Ç—Ä–æ–π–∫—É –º–æ–¥–µ–ª–∏.
"""

import subprocess
import sys
import os
from pathlib import Path


def check_available_models():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ –≤ Ollama"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π...")

    try:
        result = subprocess.run(['ollama', 'list'],
                                capture_output=True, text=True, check=True)

        print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:")
        print(result.stdout)

        # –ü–∞—Ä—Å–∏–º —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π
        models = []
        lines = result.stdout.strip().split('\n')[1:]  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        for line in lines:
            if line.strip():
                parts = line.split()
                if parts:
                    models.append(parts[0])

        return models

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π: {e}")
        return []


def pull_model(model_name):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –º–æ–¥–µ–ª—å –≤ Ollama"""
    print(f"üì• –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ {model_name}...")

    try:
        subprocess.run(['ollama', 'pull', model_name], check=True)
        print(f"‚úÖ –ú–æ–¥–µ–ª—å {model_name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥–µ–ª–∏ {model_name}: {e}")
        return False


def create_custom_model():
    """–°–æ–∑–¥–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—É—é –º–æ–¥–µ–ª—å —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏"""

    modelfile_content = """
FROM llama2
PARAMETER temperature 0.7
PARAMETER top_p 0.9
PARAMETER num_ctx 4096
PARAMETER stop "###"
SYSTEM "" –¢—ã - –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–º–æ–≥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Å–∞–π—Ç—ã –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ—Ç—á–µ—Ç—ã.

–¢—ã –¥–æ–ª–∂–µ–Ω:
1. –¢—â–∞—Ç–µ–ª—å–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
2. –°–æ–∑–¥–∞–≤–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ SQL –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
3. –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
4. –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
5. –ü—Ä–æ–≤–æ–¥–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
6. –°–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–∏ "—á—Ç–æ –µ—Å–ª–∏" –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

–†–∞–±–æ—Ç–∞–π —Ç–æ—á–Ω–æ, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
"""
""

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –º–æ–¥–µ–ª–∏
with open("generated/Modelfile", 'w', encoding='utf-8') as f:
    f.write(modelfile_content)

print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–π –º–æ–¥–µ–ª–∏...")

try:
    subprocess.run(['ollama', 'create', 'advanced_analyst', '-f', 'generated/Modelfile'],
                   check=True)
    print("‚úÖ –ö–∞—Å—Ç–æ–º–Ω–∞—è –º–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    return True
except subprocess.CalledProcessError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–æ–¥–µ–ª–∏: {e}")
    return False


def test_model_quality(model_name, test_queries):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –º–æ–¥–µ–ª–∏ –Ω–∞ –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö"""

    print(f"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ {model_name}...")

    import ollama

    results = {}

    for query in test_queries:
        try:
            response = ollama.chat(model=model_name, messages=[
                {"role": "user", "content": query}
            ])

            results[query] = {
                "success": True,
                "response": response["message"]["content"][:200] + "..." if len(
                    response["message"]["content"]) > 200 else response["message"]["content"]
            }

        except Exception as e:
            results[query] = {
                "success": False,
                "error": str(e)
            }

    return results


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –º–æ–¥–µ–ª–∏"""

    print("üöÄ –£–õ–£–ß–®–ï–ù–ò–ï –ö–ê–ß–ï–°–¢–í–ê –ú–û–î–ï–õ–ò")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
    available_models = check_available_models()

    if not available_models:
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Ollama –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –º–æ–¥–µ–ª–∏.")
        return

    print(f"\n–ù–∞–π–¥–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: {len(available_models)}")

    # –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    recommended_models = [
        "llama2",
        "mistral",
        "codellama",
        "neural-chat",
        "starling-lm"
    ]

    print(f"\nüìã –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:")
    for model in recommended_models:
        status = "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞" if model in available_models else "‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
        print(f"  ‚Ä¢ {model}: {status}")

    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–µ–π—Å—Ç–≤–∏–π
    print(f"\nüîß –í–∞—Ä–∏–∞–Ω—Ç—ã —É–ª—É—á—à–µ–Ω–∏—è:")
    print("1. –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—É—é –º–æ–¥–µ–ª—å")
    print("2. –°–æ–∑–¥–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –º–æ–¥–µ–ª—å")
    print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥–µ–ª–∏")
    print("4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ–∫—É—â–µ–π –º–æ–¥–µ–ª–∏")

    choice = input(f"\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): ").strip()

    if choice == "1":
        # –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
        print(f"\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏:")
        for i, model in enumerate(recommended_models, 1):
            if model not in available_models:
                print(f"{i}. {model}")

        model_choice = input(f"–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: ").strip()

        if model_choice.isdigit():
            idx = int(model_choice) - 1
            if 0 <= idx < len(recommended_models):
                model_to_pull = recommended_models[idx]
                if model_to_pull not in available_models:
                    pull_model(model_to_pull)
                else:
                    print(f"–ú–æ–¥–µ–ª—å {model_to_pull} —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

    elif choice == "2":
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–π –º–æ–¥–µ–ª–∏
        create_custom_model()

    elif choice == "3":
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
        test_queries = [
            "–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 2+2?",
            "–ù–∞–ø–∏—à–∏ SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            "–ö–∞–∫–∏–µ —Ç–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ç—ã –º–æ–∂–µ—à—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å?"
        ]

        print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        for model in available_models[:3]:  # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 3 –º–æ–¥–µ–ª–∏
            print(f"\nüß™ –ú–æ–¥–µ–ª—å: {model}")
            results = test_model_quality(model, test_queries)

            for query, result in results.items():
                if result["success"]:
                    print(f"  ‚úÖ '{query[:30]}...': {result['response'][:50]}")
                else:
                    print(f"  ‚ùå '{query[:30]}...': –û—à–∏–±–∫–∞ - {result['error']}")

    elif choice == "4":
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        print(f"\n–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–¥–µ–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª advanced_digital_twin.py")
        print(f"–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è LLM_MODEL –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –ø—Ä–æ–º–ø—Ç–∞—Ö.")

        print(f"\n–¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
        print(f"‚Ä¢ –ú–æ–¥–µ–ª—å: {LLM_MODEL}")
        print(f"‚Ä¢ –†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: 4096 —Ç–æ–∫–µ–Ω–æ–≤")
        print(f"‚Ä¢ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: 0.7")
        print(f"‚Ä¢ Top-p: 0.9")

    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
        return

    print(f"\n‚úÖ –ü—Ä–æ—Ü–µ—Å—Å —É–ª—É—á—à–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print(f"\n–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print(f"1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É: python run_system.py --test")
    print(f"2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print(f"3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É–ª—É—á—à–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö")


if __name__ == "__main__":
    main()